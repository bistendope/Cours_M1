Fumeur_ab = [a, b] {
	
	etat = 4;
	init = 0;

	1 = a;
	2 = b;
	3 = a, b;

	0 -> 1 [P_a];
	0 -> 2 [P_b];
	1 -> 3 [P_b];
	2 -> 3 [P_a];
	3 -> 0 [fume];

};;

Fumeur_ac = [a, c] {
	
	etat = 4;
	init = 0;

	1 = a;
	2 = c;
	3 = a, c;

	0 -> 1 [P_a];
	0 -> 2 [P_c];
	1 -> 3 [P_c];
	2 -> 3 [P_a];
	3 -> 0 [fume];

};;

Fumeur_bc = [b, c] {
	
	etat = 4;
	init = 0;

	1 = b;
	2 = c;
	3 = b, c;

	0 -> 1 [P_b];
	0 -> 2 [P_c];
	1 -> 3 [P_c];
	2 -> 3 [P_b];
	3 -> 0 [fume];

};;

Agent = [] {
	
	etat = 2;
	init = 0;

	0 -> 1 [distr];
	1 -> 0 [signal];

};;

Sem = [libre] {
	
	etat = 2;
	init = 0;

	1 = libre;

	0 -> 1 [V];
	1 -> 0 [P];

};;

SystemeAB = <Fumeur_ab f1, Fumeur_ac f2, Fumeur_bc f3, Agent agent, Sem a, Sem b, Sem c> {

	<_, _, _, distr, V, V, _>;

	<P_a, _, _, _, P, _, _>;
	<P_b, _, _, _, _, P, _>;
	<_, P_a, _, _, P, _, _>;
	<_, P_c, _, _, _, _, P>;
	<_, _, P_b, _, _, P, _>;
	<_, _, P_c, _, _, _, P>;

	/*<fume, _, _, signal, _, _, _>;
	<_, fume, _, signal, _, _, _>;
	<_, _, fume, signal, _, _, _>;
*/
};;

SystemeAC = <Fumeur_ab f1, Fumeur_ac f2, Fumeur_bc f3, Agent agent, Sem a, Sem b, Sem c> {

	<_, _, _, distr, V, _, V>;
	
	<P_a, _, _, _, P, _, _>;
	<P_b, _, _, _, _, P, _>;
	<_, P_a, _, _, P, _, _>;
	<_, P_c, _, _, _, _, P>;
	<_, _, P_b, _, _, P, _>;
	<_, _, P_c, _, _, _, P>;

	/*<fume, _, _, signal, _, _, _>;
	<_, fume, _, signal, _, _, _>;
	<_, _, fume, signal, _, _, _>;
*/
};;

SystemeBC = <Fumeur_ab f1, Fumeur_ac f2, Fumeur_bc f3, Agent agent, Sem a, Sem b, Sem c> {

	<_, _, _, distr, _, V, V>;
	
	<P_a, _, _, _, P, _, _>;
	<P_b, _, _, _, _, P, _>;
	<_, P_a, _, _, P, _, _>;
	<_, P_c, _, _, _, _, P>;
	<_, _, P_b, _, _, P, _>;
	<_, _, P_c, _, _, _, P>;

	/*<fume, _, _, signal, _, _, _>;
	<_, fume, _, signal, _, _, _>;
	<_, _, fume, signal, _, _, _>;
*/
};;
	

SystemeAB+= prop <- EF(f1.a && f1.b);;
SystemeAC+= prop <- EF(f2.a && f2.c);;
SystemeBC+= prop <- EF(f3.b && f3.c);;


todot etats_accAB.dot SystemeAB;;
todot etats_accAC.dot SystemeAC;;
todot etats_accBC.dot SystemeBC;;



/**************************Question 4***************************/


SystemeMoinsAB = <Fumeur_ab f1, Fumeur_ac f2, Fumeur_bc f3, Agent agent, Sem a, Sem b, Sem c> {

        <_, _, _, distr, V, V, _>;
        <_, _, _, distr, V, _, V>;
        <_, _, _, distr, _, V, V>;

        <_, P_a, _, _, P, _, _>;
        <_, P_c, _, _, _, _, P>;
        <_, _, P_b, _, _, P, _>;
        <_, _, P_c, _, _, _, P>;

        /*<fume, _, _, signal, _, _, _>;
        <_, fume, _, signal, _, _, _>;
        <_, _, fume, signal, _, _, _>; */

};;


SystemeMoinsAB += propAB <- EF(f1.a && f1.b);;
SystemeMoinsAB += propAC <- EF(f2.a && f2.c);;
SystemeMoinsAB += propBC <- EF(f3.b && f3.c);;
todot etats_accMoinsAB.dot SystemeMoinsAB;;


/**************************Question 5****************************/


SystemeMoinsAC = <Fumeur_ab f1, Fumeur_ac f2, Fumeur_bc f3, Agent agent, Sem a, Sem b, Sem c> {

        <_, _, _, distr, V, V, _>;
        <_, _, _, distr, V, _, V>;
        <_, _, _, distr, _, V, V>;

        <P_a, _, _, _, P, _, _>;
        <P_b, _, _, _, _, P, _>;
        <_, _ , P_b, _, _, P, _>;
        <_, _ , P_c, _, _, _, P>;

        /*<fume, _, _, signal, _, _, _>;
        <_, fume, _, signal, _, _, _>;
        <_, _, fume, signal, _, _, _>; */

};;


SystemeMoinsAC += propAB <- EF(f1.a && f1.b);;
SystemeMoinsAC += propAC <- EF(f2.a && f2.c);;
SystemeMoinsAC += propBC <- EF(f3.b && f3.c);;
todot etats_accMoinsAC.dot SystemeMoinsAC;; 


/**************************Question 6****************************/


/************************** SYSTEME_AB **************************/

//Prouve que le fumeurAB fume si les deux elements a et b sont sur la table
//CTL  EF(f1.a && f1.b)
//LTL : F(f1.a && f1.b) 
autosureteAB =  {
	etat = 2;
	acc = 1;
	init = 0;
	0 - !X1 || !X2 -> 0;
	0 - X1 && X2 -> 1;
	1 - true -> 1 [0];
};;


/********* C **********/

SystemeAB_LTL= automaton SystemeAB;;
resultatAB_LTL = SystemeAB_LTL && autosureteAB[X1 <- f1.a,X2 <- f1.b];;
resultatAB = reduce resultatAB_LTL;;
todot resultatAB.dot resultatAB;;

/********* D **********/

SystemeMoinsAB_AB_LTL= automaton SystemeMoinsAB;;
resultatMoinsAB_AB_LTL = SystemeMoinsAB_AB_LTL && autosureteAB[X1 <- f1.a,X2 <- f1.b];;
resultatMoinsAB_AB = reduce resultatMoinsAB_AB_LTL;;
todot resultatMoinsAB_AB.dot resultatMoinsAB_AB;;

/********* E **********/

SystemeMoinsAC_AB_LTL= automaton SystemeMoinsAC;;
resultatMoinsAC_AB_LTL = SystemeMoinsAC_AB_LTL && autosureteAB[X1 <- f1.a,X2 <- f1.b];;
resultatMoinsAC_AB = reduce resultatMoinsAC_AB_LTL;;
todot resultatMoinsAC_AB.dot resultatMoinsAC_AB;;



/************************** SYSTEME_AC **************************/


//Prouve que le fumeurAC fume si les deux elements a et c sont sur la table
//CTL  EF(f2.a && f2.c)
//LTL : F(f2.a && f2.c) 
autosureteAC =  {
	etat = 2;
	acc = 1;
	init = 0;
	0 - !X1 || !X2 -> 0;
	0 - X1 && X2 -> 1;
	1 - true -> 1 [0];
};;

/********* C **********/

SystemeAC_LTL= automaton SystemeAC;;
resultatAC_LTL = SystemeAC_LTL && autosureteAC[X1 <- f2.a,X2 <- f2.c];;
resultatAC = reduce resultatAC_LTL;;
todot resultatAC.dot resultatAC;;

/********* D **********/

SystemeMoinsAB_AC_LTL= automaton SystemeMoinsAB;;
resultatMoinsAB_AC_LTL = SystemeMoinsAB_AC_LTL && autosureteAC[X1 <- f2.a,X2 <- f2.c];;
resultatMoinsAB_AC = reduce resultatMoinsAB_AC_LTL;;
todot resultatMoinsAB_AC.dot resultatMoinsAB_AC;;

/********* E **********/

SystemeMoinsAC_AC_LTL= automaton SystemeMoinsAC;;
resultatMoinsAC_AC_LTL = SystemeMoinsAC_AC_LTL && autosureteAC[X1 <- f2.a,X2 <- f2.c];;
resultatMoinsAC_AC = reduce resultatMoinsAC_AC_LTL;;
todot resultatMoinsAC_AC.dot resultatMoinsAC_AC;;



/************************** SYSTEME_BC **************************/

//Prouve que le fumeurBC fume si les deux elements b et c sont sur la table
//CTL  EF(f3.b && f3.c)
//LTL : F(f3.b && f3.c) 
autosureteBC =  {
	etat = 2;
	acc = 1;
	init = 0;
	0 - !X1 || !X2 -> 0;
	0 - X1 && X2 -> 1;
	1 - true -> 1 [0];
};;


/********* C **********/

SystemeBC_LTL= automaton SystemeBC;;
resultatBC_LTL = SystemeBC_LTL && autosureteBC[X1 <- f3.b,X2 <- f3.c];;
resultatBC = reduce resultatBC_LTL;;
todot resultatBC.dot resultatBC;;

/********* D **********/


SystemeMoinsAB_BC_LTL= automaton SystemeMoinsAB;;
resultatMoinsAB_BC_LTL = SystemeMoinsAB_BC_LTL && autosureteBC[X1 <- f3.b,X2 <- f3.c];;
resultatMoinsAB_BC = reduce resultatMoinsAB_BC_LTL;;
todot resultatMoinsAB_BC.dot resultatMoinsAB_BC;;

/********* E **********/


SystemeMoinsAC_BC_LTL= automaton SystemeMoinsAC;;
resultatMoinsAC_BC_LTL = SystemeMoinsAC_BC_LTL && autosureteBC[X1 <- f3.b,X2 <- f3.c];;
resultatMoinsAC_BC = reduce resultatMoinsAC_BC_LTL;;
todot resultatMoinsAC_BC.dot resultatMoinsAC_BC;;
